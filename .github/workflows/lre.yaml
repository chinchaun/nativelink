---
name: Local Remote Execution

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - debug

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  # local:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ubuntu-22.04]
  #   name: Local / ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   timeout-minutes: 45
  #   steps:
  #     - name: Checkout
  #       uses: >- # v4.1.1
  #         actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

  #     - name: Install Nix
  #       uses: >- # v10
  #         DeterminateSystems/nix-installer-action@de22e16c4711fca50c816cc9081563429d1cf563

  #     - name: Free disk space
  #       uses: >- # v2.0.0
  #         endersonmenezes/free-disk-space@3f9ec39ebae520864ac93467ee395f5237585c21
  #       with:
  #         remove_android: true
  #         remove_dotnet: true
  #         remove_haskell: true
  #         remove_tool_cache: false

  #     - name: Cache Nix derivations
  #       uses: >- # v4
  #         DeterminateSystems/magic-nix-cache-action@fc6aaceb40b9845a02b91e059ec147e78d1b4e41

  #     - name: Build hello_lre with LRE toolchain.
  #       run: >
  #         nix develop --impure --command
  #         bash -c "bazel run \
  #          --config=lre \
  #          --verbose_failures \
  #          @local-remote-execution//examples:hello_lre"

  remote:
    strategy:
      fail-fast: false
      matrix:
        os: [open-fire-ubuntu-22-04-8vcpu-x86_64]
    name: Remote / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    steps:
      - name: Checkout
        uses: >- # v4.1.1
          actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Install Nix
        uses: >- # v10
          DeterminateSystems/nix-installer-action@de22e16c4711fca50c816cc9081563429d1cf563
        with:
            backtrace: full
            logger: pretty
            extra-conf: |
              filter-syscalls = false
      # - name: Free disk space
      #   uses: >- # v2.0.0
      #     endersonmenezes/free-disk-space@3f9ec39ebae520864ac93467ee395f5237585c21
      #   with:
      #     remove_android: true
      #     remove_dotnet: true
      #     remove_haskell: true
      #     remove_tool_cache: false

      - name: Cache Nix derivations
        uses: >- # v4
          DeterminateSystems/magic-nix-cache-action@fc6aaceb40b9845a02b91e059ec147e78d1b4e41
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          sudo: false

      - name: Go version
        shell: bash
        working-directory: /
        run: go version

      - name: Start Kubernetes cluster (Infra)
        run: >
          nix run .#native up

      - name: Start Kubernetes cluster (Operations)
        run: >
          nix develop --impure --command
          bash -c "./deployment-examples/kubernetes/01_operations.sh"

      - name: Start Kubernetes cluster (Application)
        run: >
          nix develop --impure --command
          bash -c "./deployment-examples/kubernetes/02_application.sh"

      - name: Get gateway IPs
        id: gateway-ips
        run: |
          echo "cache_ip=$(kubectl get gtw cache-gateway -o=jsonpath='{.status.addresses[0].value}')" >> "$GITHUB_ENV"
          echo "scheduler_ip=$(kubectl get gtw scheduler-gateway -o=jsonpath='{.status.addresses[0].value}')" >> "$GITHUB_ENV"

      - name: Print cluster state
        run: |
          kubectl get svc -A
          kubectl get pod -A
          kubectl get svc -A
          kubectl get deployments -A
          kubectl describe gtw
          echo "cas"
          kubectl logs -l app=nativelink-cas
          echo "scheduler"
          kubectl logs -l app=nativelink-scheduler
          echo "worker"
          kubectl logs -l app=nativelink-worker

      - name: Build hello_lre with LRE toolchain.
        run: >
          nix develop --impure --command
          bash -c "bazel run \
            --config=lre \
            --remote_instance_name=main \
            --remote_cache=grpc://$cache_ip \
            --remote_executor=grpc://$scheduler_ip \
            --verbose_failures \
            @local-remote-execution//examples:hello_lre"
